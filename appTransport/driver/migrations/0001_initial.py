# Generated by Django 4.2.4 on 2023-08-29 16:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('forwarding', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('staff', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='Imię')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Nazwisko')),
                ('phone_number', models.CharField(blank=True, max_length=10, unique=True, verbose_name='Numer telefonu')),
                ('firs_name', models.CharField(blank=True, choices=[('C', 'C'), ('C+E', 'C+E')], verbose_name='Prawo jazdy')),
                ('email_address', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Status_of_load',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loading_status', models.CharField(choices=[('loaded', 'Załadowany'), ('waiting_for_loading', 'Oczekiwanie na załadunek')])),
                ('unloading_status', models.CharField(choices=[('unloaded', 'Rozładowany'), ('waiting_for_unloading', 'Oczekiwanie na rozładunek')])),
            ],
        ),
        migrations.CreateModel(
            name='Load_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('load_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='forwarding.info_transport')),
            ],
        ),
        migrations.CreateModel(
            name='Info_of_truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mileage', models.DecimalField(blank=True, decimal_places=1, max_digits=8, verbose_name='Przebieg')),
                ('fuel', models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Tankowanie')),
                ('service', models.CharField(choices=[('Yes', 'Przesmarowany'), ('No', 'Nie przesmarowany')], verbose_name='Serwis')),
                ('description', models.TextField(verbose_name='Uwagi')),
                ('driver_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Kierowca')),
                ('trailer_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='staff.trailer', verbose_name='Rejestracja przyczepy')),
                ('truck_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='staff.truck', verbose_name='Rejestracja ciężarówki')),
            ],
        ),
    ]
